{
  "scope": "source.js, source.coffee, source.js.embedded.html",

  // Source: http://oscarotero.com/jquery/
  "completions":
  [
    // 屬性 / Attributes
    { "trigger": "attr()\tjQuery", "contents": "attr(\"$1\")$0" },
    { "trigger": "prop()\tjQuery", "contents": "prop(\"$1\")$0" },
    { "trigger": "removeAttr()\tjQuery", "contents": "removeAttr(\"$1\")$0" },
    { "trigger": "removeProp()\tjQuery", "contents": "removeProp(\"$1\")$0" },
    { "trigger": "val()\tjQuery", "contents": "val(\"$1\")$0" },
    { "trigger": "addClass()\tjQuery", "contents": "addClass(\"$1\")$0" },
    { "trigger": "css()\tjQuery", "contents": "css(\"$1\")$0" },
    { "trigger": "cssHooks\tjQuery", "contents": "cssHooks" },
    { "trigger": "hasClass()\tjQuery", "contents": "hasClass(\"$1\")$0" },
    { "trigger": "removeClass()\tjQuery", "contents": "removeClass(\"$1\")$0" },
    { "trigger": "toggleClass()\tjQuery", "contents": "toggleClass(\"$1\")$0" },
    { "trigger": "height()\tjQuery", "contents": "height(\"$1\")$0" },
    { "trigger": "innerHeight()\tjQuery", "contents": "innerHeight()" },
    { "trigger": "innerWidth()\tjQuery", "contents": "innerWidth()" },
    { "trigger": "outerHeight()\tjQuery", "contents": "outerHeight()" },
    { "trigger": "outerWidth()\tjQuery", "contents": "outerWidth()" },
    { "trigger": "width()\tjQuery", "contents": "width(\"$1\")$0" },
    { "trigger": "offset()\tjQuery", "contents": "offset()" },
    { "trigger": "offsetParent()\tjQuery", "contents": "offsetParent()" },
    { "trigger": "position()\tjQuery", "contents": "position()" },
    { "trigger": "scrollLeft()\tjQuery", "contents": "scrollLeft(\"$1\")$0" },
    { "trigger": "scrollTop()\tjQuery", "contents": "scrollTop(\"$1\")$0" },
    { "trigger": "data()\tjQuery", "contents": "data(\"$1\")$0" },
    { "trigger": "hasData()\tjQuery", "contents": "hasData(\"$1\")$0" },
    { "trigger": "removeData()\tjQuery", "contents": "removeData(\"$1\")$0" },

    // 操作 / Manipulation
    { "trigger": "clone()\tjQuery", "contents": "clone()" },
    { "trigger": "wrap()\tjQuery", "contents": "wrap()" },
    { "trigger": "wrapAll()\tjQuery", "contents": "wrapAll()" },
    { "trigger": "wrapInner()\tjQuery", "contents": "wrapInner()" },
    { "trigger": "append()\tjQuery", "contents": "append()" },
    { "trigger": "appendTo()\tjQuery", "contents": "appendTo()" },
    { "trigger": "html()\tjQuery", "contents": "html()" },
    { "trigger": "prepend()\tjQuery", "contents": "prepend()" },
    { "trigger": "prependTo()\tjQuery", "contents": "prependTo()" },
    { "trigger": "text()\tjQuery", "contents": "text()" },
    { "trigger": "after()\tjQuery", "contents": "after()" },
    { "trigger": "before()\tjQuery", "contents": "before()" },
    { "trigger": "insertAfter()\tjQuery", "contents": "insertAfter()" },
    { "trigger": "insertBefore()\tjQuery", "contents": "insertBefore()" },
    { "trigger": "detach()\tjQuery", "contents": "detach()" },
    { "trigger": "empty()\tjQuery", "contents": "empty()" },
    { "trigger": "remove()\tjQuery", "contents": "remove()" },
    { "trigger": "unwrap()\tjQuery", "contents": "unwrap()" },
    { "trigger": "replaceAll()\tjQuery", "contents": "replaceAll()" },
    { "trigger": "replaceWith()\tjQuery", "contents": "replaceWith()" },

    // 遍歷 / Traversing
    { "trigger": "eq()\tjQuery", "contents": "eq()" },
    { "trigger": "filter()\tjQuery", "contents": "filter()" },
    { "trigger": "first()\tjQuery", "contents": "first()" },
    { "trigger": "has()\tjQuery", "contents": "has()" },
    { "trigger": "is()\tjQuery", "contents": "is()" },
    { "trigger": "last()\tjQuery", "contents": "last()" },
    { "trigger": "map()\tjQuery", "contents": "map()" },
    { "trigger": "not()\tjQuery", "contents": "not()" },
    { "trigger": "slice()\tjQuery", "contents": "slice()" },
    { "trigger": "add()\tjQuery", "contents": "add()" },
    { "trigger": "andSelf()\tjQuery", "contents": "andSelf()" },
    { "trigger": "contents()\tjQuery", "contents": "contents()" },
    { "trigger": "each()\tjQuery", "contents": "each()" },
    { "trigger": "end()\tjQuery", "contents": "end()" },
    { "trigger": "addBack()\tjQuery", "contents": "addBack()" },
    { "trigger": "children()\tjQuery", "contents": "children()" },
    { "trigger": "closest()\tjQuery", "contents": "closest()" },
    { "trigger": "find()\tjQuery", "contents": "find()" },
    { "trigger": "next()\tjQuery", "contents": "next()" },
    { "trigger": "nextAll()\tjQuery", "contents": "nextAll()" },
    { "trigger": "nextUntil()\tjQuery", "contents": "nextUntil()" },
    { "trigger": "parent()\tjQuery", "contents": "parent()" },
    { "trigger": "parents()\tjQuery", "contents": "parents()" },
    { "trigger": "parentsUntil()\tjQuery", "contents": "parentsUntil()" },
    { "trigger": "prev()\tjQuery", "contents": "prev()" },
    { "trigger": "prevAll()\tjQuery", "contents": "prevAll()" },
    { "trigger": "prevUntil()\tjQuery", "contents": "prevUntil()" },
    { "trigger": "siblings()\tjQuery", "contents": "siblings()" },

    // 事件 / Events
    { "trigger": "error()\tjQuery", "contents": "error()" },
    { "trigger": "resize()\tjQuery", "contents": "resize()" },
    { "trigger": "scroll()\tjQuery", "contents": "scroll()" },
    { "trigger": "holdReady()\tjQuery", "contents": "holdReady()" },
    { "trigger": "load()\tjQuery", "contents": "load()" },
    { "trigger": "ready()\tjQuery", "contents": "ready()" },
    { "trigger": "unload()\tjQuery", "contents": "unload()" },
    { "trigger": "bind()\tjQuery", "contents": "bind()" },
    { "trigger": "delegate()\tjQuery", "contents": "delegate()" },
    { "trigger": "die()\tjQuery", "contents": "die()" },
    { "trigger": "live()\tjQuery", "contents": "live()" },
    { "trigger": "off()\tjQuery", "contents": "off()" },
    { "trigger": "on()\tjQuery", "contents": "on()" },
    { "trigger": "one()\tjQuery", "contents": "one()" },
    { "trigger": "trigger()\tjQuery", "contents": "trigger()" },
    { "trigger": "triggerHandler()\tjQuery", "contents": "triggerHandler()" },
    { "trigger": "unbind()\tjQuery", "contents": "unbind()" },
    { "trigger": "undelegate()\tjQuery", "contents": "undelegate()" },
    { "trigger": "blur()\tjQuery", "contents": "blur()" },
    { "trigger": "change()\tjQuery", "contents": "change()" },
    { "trigger": "focus()\tjQuery", "contents": "focus()" },
    { "trigger": "select()\tjQuery", "contents": "select()" },
    { "trigger": "submit()\tjQuery", "contents": "submit()" },
    { "trigger": "keydown()\tjQuery", "contents": "keydown()" },
    { "trigger": "keypress()\tjQuery", "contents": "keypress()" },
    { "trigger": "keyup()\tjQuery", "contents": "keyup()" },
    { "trigger": "click()\tjQuery", "contents": "click()" },
    { "trigger": "dblclick()\tjQuery", "contents": "dblclick()" },
    { "trigger": "focusin()\tjQuery", "contents": "focusin()" },
    { "trigger": "focusout()\tjQuery", "contents": "focusout()" },
    { "trigger": "hover()\tjQuery", "contents": "hover()" },
    { "trigger": "mousedown()\tjQuery", "contents": "mousedown()" },
    { "trigger": "mouseenter()\tjQuery", "contents": "mouseenter()" },
    { "trigger": "mouseleave()\tjQuery", "contents": "mouseleave()" },
    { "trigger": "mousemove()\tjQuery", "contents": "mousemove()" },
    { "trigger": "mouseout()\tjQuery", "contents": "mouseout()" },
    { "trigger": "mouseover()\tjQuery", "contents": "mouseover()" },
    { "trigger": "mouseup()\tjQuery", "contents": "mouseup()" },
    { "trigger": "toggle()\tjQuery", "contents": "toggle()" },
    { "trigger": "event.currentTarget\tjQuery", "contents": "event.currentTarget" },
    { "trigger": "event.data\tjQuery", "contents": "event.data" },
    { "trigger": "event.isDefaultPrevented()\tjQuery", "contents": "event.isDefaultPrevented()" },
    { "trigger": "event.isImmediatePropagationStopped()\tjQuery", "contents": "event.isImmediatePropagationStopped()" },
    { "trigger": "event.isPropagationStopped()\tjQuery", "contents": "event.isPropagationStopped()" },
    { "trigger": "event.namespace\tjQuery", "contents": "event.namespace" },
    { "trigger": "event.pageX\tjQuery", "contents": "event.pageX" },
    { "trigger": "event.pageY\tjQuery", "contents": "event.pageY" },
    { "trigger": "event.preventDefault()\tjQuery", "contents": "event.preventDefault()" },
    { "trigger": "event.relatedTarget\tjQuery", "contents": "event.relatedTarget" },
    { "trigger": "event.result\tjQuery", "contents": "event.result" },
    { "trigger": "event.stopImmediatePropagation()\tjQuery", "contents": "event.stopImmediatePropagation()" },
    { "trigger": "event.stopPropagation()\tjQuery", "contents": "event.stopPropagation()" },
    { "trigger": "event.target\tjQuery", "contents": "event.target" },
    { "trigger": "event.timeStamp\tjQuery", "contents": "event.timeStamp" },
    { "trigger": "event.type\tjQuery", "contents": "event.type" },
    { "trigger": "event.which\tjQuery", "contents": "event.which" },

    // 效果 / Effects
    { "trigger": "hide()\tjQuery", "contents": "hide()" },
    { "trigger": "show()\tjQuery", "contents": "show()" },
    { "trigger": "toggle()\tjQuery", "contents": "toggle()" },
    { "trigger": "animate()\tjQuery", "contents": "animate()" },
    { "trigger": "clearQueue()\tjQuery", "contents": "clearQueue()" },
    { "trigger": "delay()\tjQuery", "contents": "delay()" },
    { "trigger": "dequeue()\tjQuery", "contents": "dequeue()" },
    { "trigger": "dequeue()\tjQuery", "contents": "dequeue()" },
    { "trigger": "finish()\tjQuery", "contents": "finish()" },
    { "trigger": "fx.interval\tjQuery", "contents": "fx.interval" },
    { "trigger": "fx.off\tjQuery", "contents": "fx.off" },
    { "trigger": "queue()\tjQuery", "contents": "queue()" },
    { "trigger": "queue()\tjQuery", "contents": "queue()" },
    { "trigger": "stop()\tjQuery", "contents": "stop()" },
    { "trigger": "fadeIn()\tjQuery", "contents": "fadeIn()" },
    { "trigger": "fadeOut()\tjQuery", "contents": "fadeOut()" },
    { "trigger": "fadeTo()\tjQuery", "contents": "fadeTo()" },
    { "trigger": "fadeToggle()\tjQuery", "contents": "fadeToggle()" },
    { "trigger": "slideDown()\tjQuery", "contents": "slideDown()" },
    { "trigger": "slideToggle()\tjQuery", "contents": "slideToggle()" },
    { "trigger": "slideUp()\tjQuery", "contents": "slideUp()" },

    // Ajax
    { "trigger": "ajaxComplete()\tjQuery", "contents": "ajaxComplete()" },
    { "trigger": "ajaxError()\tjQuery", "contents": "ajaxError()" },
    { "trigger": "ajaxSend()\tjQuery", "contents": "ajaxSend()" },
    { "trigger": "ajaxStart()\tjQuery", "contents": "ajaxStart()" },
    { "trigger": "ajaxStop()\tjQuery", "contents": "ajaxStop()" },
    { "trigger": "ajaxSuccess()\tjQuery", "contents": "ajaxSuccess()" },
    { "trigger": "param()\tjQuery", "contents": "param()" },
    { "trigger": "serialize()\tjQuery", "contents": "serialize()" },
    { "trigger": "serializeArray()\tjQuery", "contents": "serializeArray()" },
    { "trigger": "ajax()\tjQuery", "contents": "ajax()" },
    { "trigger": "ajaxSetup()\tjQuery", "contents": "ajaxSetup()" },
    { "trigger": "get()\tjQuery", "contents": "get()" },
    { "trigger": "getJSON()\tjQuery", "contents": "getJSON()" },
    { "trigger": "getScript()\tjQuery", "contents": "getScript()" },
    { "trigger": "load()\tjQuery", "contents": "load()" },
    { "trigger": "post()\tjQuery", "contents": "post()" },

    // 核心 / Core
    { "trigger": "jQuery\tjQuery", "contents": "jQuery" },
    { "trigger": "jQuery()\tjQuery", "contents": "jQuery(\"$0\")" },
    { "trigger": "noConflict()\tjQuery", "contents": "noConflict()" },
    { "trigger": "sub()\tjQuery", "contents": "sub()" },
    { "trigger": "when()\tjQuery", "contents": "when()" },
    { "trigger": "boxModel\tjQuery", "contents": "boxModel" },
    { "trigger": "browser\tjQuery", "contents": "browser" },
    { "trigger": "contains()\tjQuery", "contents": "contains()" },
    { "trigger": "each()\tjQuery", "contents": "each()" },
    { "trigger": "extend()\tjQuery", "contents": "extend()" },
    { "trigger": "globalEval()\tjQuery", "contents": "globalEval()" },
    { "trigger": "grep()\tjQuery", "contents": "grep()" },
    { "trigger": "inArray()\tjQuery", "contents": "inArray()" },
    { "trigger": "isArray()\tjQuery", "contents": "isArray()" },
    { "trigger": "isEmptyObject()\tjQuery", "contents": "isEmptyObject()" },
    { "trigger": "isFunction()\tjQuery", "contents": "isFunction()" },
    { "trigger": "isNumeric()\tjQuery", "contents": "isNumeric()" },
    { "trigger": "isPlainObject()\tjQuery", "contents": "isPlainObject()" },
    { "trigger": "isWindow()\tjQuery", "contents": "isWindow()" },
    { "trigger": "isXMLDoc()\tjQuery", "contents": "isXMLDoc()" },
    { "trigger": "makeArray()\tjQuery", "contents": "makeArray()" },
    { "trigger": "map()\tjQuery", "contents": "map()" },
    { "trigger": "merge()\tjQuery", "contents": "merge()" },
    { "trigger": "noop()\tjQuery", "contents": "noop()" },
    { "trigger": "now()\tjQuery", "contents": "now()" },
    { "trigger": "parseHTML()\tjQuery", "contents": "parseHTML()" },
    { "trigger": "parseJSON()\tjQuery", "contents": "parseJSON()" },
    { "trigger": "parseXML()\tjQuery", "contents": "parseXML()" },
    { "trigger": "proxy()\tjQuery", "contents": "proxy()" },
    { "trigger": "support\tjQuery", "contents": "support" },
    { "trigger": "trim()\tjQuery", "contents": "trim()" },
    { "trigger": "type()\tjQuery", "contents": "type()" },
    { "trigger": "unique()\tjQuery", "contents": "unique()" },
    { "trigger": "index()\tjQuery", "contents": "index()" },
    { "trigger": "size()\tjQuery", "contents": "size()" },
    { "trigger": "toArray()\tjQuery", "contents": "toArray()" },
    { "trigger": "jquery\tjQuery", "contents": "jquery" },
    { "trigger": "context\tjQuery", "contents": "context" },
    { "trigger": "error()\tjQuery", "contents": "error()" },
    { "trigger": "length\tjQuery", "contents": "length" },
    { "trigger": "pushStack()\tjQuery", "contents": "pushStack()" },
    { "trigger": "selector\tjQuery", "contents": "selector" },
    { "trigger": "always()\tjQueryDeferred", "contents": "always()" },
    { "trigger": "done()\tjQueryDeferred", "contents": "done()" },
    { "trigger": "fail()\tjQueryDeferred", "contents": "fail()" },
    { "trigger": "isRejected()\tjQueryDeferred", "contents": "isRejected()" },
    { "trigger": "isResolved()\tjQueryDeferred", "contents": "isResolved()" },
    { "trigger": "notify()\tjQueryDeferred", "contents": "notify()" },
    { "trigger": "notifyWith()\tjQueryDeferred", "contents": "notifyWith()" },
    { "trigger": "pipe()\tjQueryDeferred", "contents": "pipe()" },
    { "trigger": "progress()\tjQueryDeferred", "contents": "progress()" },
    { "trigger": "promise()\tjQueryDeferred", "contents": "promise()" },
    { "trigger": "reject()\tjQueryDeferred", "contents": "reject()" },
    { "trigger": "rejectWith()\tjQueryDeferred", "contents": "rejectWith()" },
    { "trigger": "resolve()\tjQueryDeferred", "contents": "resolve()" },
    { "trigger": "resolveWith()\tjQueryDeferred", "contents": "resolveWith()" },
    { "trigger": "state()\tjQueryDeferred", "contents": "state()" },
    { "trigger": "then()\tjQueryDeferred", "contents": "then()" },
    { "trigger": "promise()\tjQuery", "contents": "promise()" },
    { "trigger": "Callbacks()\tjQuery", "contents": "Callbacks()" },
    { "trigger": "add()\tjQueryCallbacks", "contents": "add()" },
    { "trigger": "disable()\tjQueryCallbacks", "contents": "disable()" },
    { "trigger": "empty()\tjQueryCallbacks", "contents": "empty()" },
    { "trigger": "fire()\tjQueryCallbacks", "contents": "fire()" },
    { "trigger": "fired()\tjQueryCallbacks", "contents": "fired()" },
    { "trigger": "fireWith()\tjQueryCallbacks", "contents": "fireWith()" },
    { "trigger": "has()\tjQueryCallbacks", "contents": "has()" },
    { "trigger": "lock()\tjQueryCallbacks", "contents": "lock()" },
    { "trigger": "locked()\tjQueryCallbacks", "contents": "locked()" },
    { "trigger": "remove()\tjQueryCallbacks", "contents": "remove()" }
  ]
}